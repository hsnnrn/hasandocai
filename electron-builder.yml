# Electron Builder Configuration
# This file provides additional configuration for electron-builder
# Main configuration is in package.json "build" section

# Global build settings
directories:
  output: dist
  buildResources: build

# File patterns to include/exclude
files:
  - "**/*"
  - "!node_modules"
  - "!dist"
  - "!build"
  - "!.git"
  - "!*.md"
  - "!.github"
  - "!tests"
  - "!temp"
  - "!debug-*.html"
  - "!test-*.html"
  - "!test-*.js"
  - "!test-*.ts"

# Extra resources (files that should be copied to the app bundle)
extraResources:
  - from: "assets"
    to: "assets"
    filter: ["**/*"]

# macOS specific configuration
mac:
  target:
    - target: dmg
      arch:
        - x64
        - arm64
  category: public.app-category.productivity
  icon: assets/icon.icns
  notarize: false
  hardenedRuntime: true
  gatekeeperAssess: false
  entitlements: build/entitlements.mac.plist
  entitlementsInherit: build/entitlements.mac.plist
  bundleVersion: "1.0.0"
  bundleShortVersion: "1.0.0"
  bundleIdentifier: "com.hsnnrn.docaiproduction"
  copyright: "Copyright Â© 2024 hsnnrn"
  minimumSystemVersion: "10.14.0"

# Windows specific configuration
win:
  target:
    - target: nsis
      arch:
        - x64
        - ia32
  publisherName: "hsnnrn"
  icon: assets/icon.ico
  requestedExecutionLevel: asInvoker
  certificateFile: null
  certificatePassword: null
  verifyUpdateCodeSignature: false

# Linux specific configuration
linux:
  target:
    - target: AppImage
      arch:
        - x64
    - target: deb
      arch:
        - x64
    - target: rpm
      arch:
        - x64
  category: Office
  icon: assets/icon.png
  maintainer: "hsnnrn <hsnnrn@example.com>"
  vendor: "hsnnrn"
  description: "DocAI Production Application"
  homepage: "https://github.com/hsnnrn/DocAiProduction"
  synopsis: "Minimal Electron app for DocAI production builds"

# NSIS installer configuration (Windows)
nsis:
  oneClick: false
  allowToChangeInstallationDirectory: true
  allowElevation: true
  installerIcon: assets/icon.ico
  uninstallerIcon: assets/icon.ico
  installerHeaderIcon: assets/icon.ico
  createDesktopShortcut: true
  createStartMenuShortcut: true
  shortcutName: "DocAiProduction"
  include: "build/installer.nsh"
  script: "build/installer.nsh"
  warningsAsErrors: false
  displayLanguageSelector: false
  language: 1033
  multiLanguageInstaller: false
  perMachine: false
  runAfterFinish: true
  deleteAppDataOnUninstall: false
  packElevateHelper: true
  allowToChangeInstallationDirectory: true

# DMG configuration (macOS)
dmg:
  title: "DocAiProduction Installer"
  icon: assets/icon.icns
  background: assets/dmg-background.png
  contents:
    - x: 130
      y: 220
    - x: 410
      y: 220
      type: link
      path: /Applications
  window:
    width: 540
    height: 380
  format: UDZO
  compressionLevel: 9

# AppImage configuration (Linux)
appImage:
  artifactName: "${productName}-${version}-${arch}.${ext}"
  category: Office
  synopsis: "DocAI Production Application"
  description: "Minimal Electron app for DocAI production builds with automatic updates"

# Snap configuration (Linux)
snap:
  confinement: strict
  grade: stable
  summary: "DocAI Production Application"
  description: "Minimal Electron app for DocAI production builds"
  base: core18
  buildPackages:
    - nodejs
    - npm
  plugs:
    - network
    - network-bind
    - desktop
    - desktop-legacy
    - x11
    - unity7
    - browser-support
    - opengl

# Flatpak configuration (Linux)
flatpak:
  id: com.hsnnrn.docaiproduction
  runtime: org.freedesktop.Platform
  runtimeVersion: "20.08"
  sdk: org.freedesktop.Sdk
  branch: stable
  arch: x86_64
  filesystems:
    - host
    - home
  permissions:
    - network
    - x11
    - wayland
    - fallback-x11

# Publishing configuration
publish:
  provider: github
  owner: hsnnrn
  repo: DocAiProduction
  releaseType: release
  draft: false
  prerelease: false

# Compression settings
compression: maximum

# Build environment variables
env:
  NODE_ENV: production
  ELECTRON_BUILDER_CACHE: $HOME/.cache/electron-builder
  ELECTRON_CACHE: $HOME/.cache/electron

# Build hooks
beforeBuild:
  - npm run build:renderer
  - npm run build:main

afterSign: build/afterSign.js
afterAllArtifactBuild: build/afterAllArtifactBuild.js

# Debug configuration
debug: false
verbose: false
