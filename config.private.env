# üîê PRIVATE REPOSITORY - Supabase Configuration Template
# Bu dosya private repo'da g√ºvenle saklanabilir
# Ger√ßek deƒüerlerinizi buraya girin ve .env olarak kaydedin

# =============================================================================
# ‚ö†Ô∏è √ñNEMLƒ∞: A≈üaƒüƒ±daki "your_*_here" deƒüerlerini doldurun!
# =============================================================================

# Supabase OAuth Configuration
# Supabase Dashboard > Settings > API Management > OAuth Apps
SUPABASE_OAUTH_CLIENT_ID=16f8e0d2-e9c6-4b8a-896d-2b687551ad0a
SUPABASE_OAUTH_CLIENT_SECRET=sba_867174f18feedf9b919abb112665d0438820e161

# Supabase Database Configuration
# Supabase Dashboard > Settings > API
SUPABASE_ANON_KEY=your_supabase_anon_key_here

# OAuth Server Configuration
OAUTH_PORT=54321
REDIRECT_URI_LOCAL=http://localhost:54321/callback
REDIRECT_URI_CUSTOM=myapp://oauth/callback

# Keytar Service Configuration
SERVICE_NAME=DocDataApp

# Supabase Management API Base URL
SUPABASE_API_BASE_URL=https://api.supabase.com/v1

# OAuth Scopes (virg√ºlle ayrƒ±lmƒ±≈ü)
OAUTH_SCOPES=read:organizations,read:projects,read:api-keys,read:storage,read:functions

# =============================================================================
# AI MODEL CONFIGURATION
# =============================================================================

# BGE-M3 Model Server (Python Flask)
BGE_MODEL_SERVER_URL=http://127.0.0.1:5000

# Llama Server (Ollama)
LLAMA_SERVER_URL=http://127.0.0.1:11434

# LLM Model Selection (recommended: llama3.2:3b for fast inference)
# Options: llama3.2:3b, gemma2:2b, qwen2.5:7b, mistral:7b
LLAMA_MODEL=llama3.2:3b

# =============================================================================
# GPU CONFIGURATION
# =============================================================================

# GPU_MODE: auto, enabled, disabled
GPU_MODE=auto

# OLLAMA_NUM_GPU: 0 = CPU only, 1+ = GPU count
OLLAMA_NUM_GPU=1

# GPU Warm-up on app startup (recommended for faster first response)
GPU_WARMUP=true

# Max context length (lower = faster, higher = more context)
MAX_CONTEXT_LENGTH=15000

# GPU Memory Monitor (auto cleanup when threshold exceeded - in MB)
GPU_MEMORY_THRESHOLD=6000
GPU_AUTO_CLEANUP=true

# =============================================================================
# DEEP ANALYSIS CONFIGURATION
# =============================================================================

# Enable critic model for quality checking
ENABLE_CRITIC=true

# Critic model (llama, mistral, gemma)
CRITIC_MODEL=llama

# Timeouts (in milliseconds)
CRITIC_TIMEOUT=2000
DEEP_ANALYSIS_TIMEOUT=15000

# Optional: Escalate to stronger model if critic fails
# ESCALATE_MODEL=mixtral

# =============================================================================
# VECTOR DATABASE CONFIGURATION
# =============================================================================

# Vector DB type: local, supabase, pinecone
VECTOR_DB=local

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

NODE_ENV=development

# Debug OAuth flow (detailed logs)
DEBUG_OAUTH=true

# =============================================================================
# üìù NASIL KULLANILIR?
# =============================================================================
# 
# BU Cƒ∞HAZDA (ƒ∞lk Kurulum):
# 1. Yukarƒ±daki "your_*_here" deƒüerlerini ger√ßek Supabase deƒüerlerinizle deƒüi≈ütirin
# 2. Bu dosyayƒ± .env olarak kaydedin:
#    Windows PowerShell: Copy-Item config.private.env .env
#    Windows CMD: copy config.private.env .env
#    Linux/Mac: cp config.private.env .env
# 3. .env dosyasƒ±nƒ± Git'e ekleyin:
#    git add .env
#    git commit -m "config: Add Supabase credentials (private repo)"
#    git push origin feature/mistral-chatbot-deep
# 
# BA≈ûKA Bƒ∞R Cƒ∞HAZDA (Pull):
# 1. Repository'yi clone edin veya pull yapƒ±n:
#    git clone https://github.com/hsnnrn/hasandocai.git
#    cd hasandocai
#    git checkout feature/mistral-chatbot-deep
#    git pull
# 2. .env dosyasƒ± otomatik gelecek (t√ºm credentials ile)
# 3. Baƒüƒ±mlƒ±lƒ±klarƒ± y√ºkleyin:
#    npm install
# 4. Uygulamayƒ± ba≈ülatƒ±n:
#    npm run dev
# 
# G√úVENLƒ∞K NOTU:
# - Repository MUTLAKA PRIVATE olmalƒ±
# - Asla public yapmayin!
# - .gitignore'da .env satƒ±rƒ±nƒ± kaldƒ±rdƒ±k (private repo i√ßin)
# 
# =============================================================================

